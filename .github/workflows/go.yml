# GitHub Actions CI工作流：自动构建Windows可执行文件

name: Build Windows Executables

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    runs-on: windows-latest
    env:
      GOPATH: ${{ github.workspace }}\go

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.20'  # 项目使用的Go版本
          check-latest: true
          
      - name: 清理Go模块缓存
        run: |
          go clean -modcache
          go clean -cache
        shell: pwsh

      - name: 安装Visual Studio Build Tools（用于CGO）
        uses: ilammy/msvc-dev-cmd@v1

      - name: 缓存Go依赖
        uses: actions/cache@v4
        with:
          path: |
            ~\go\pkg\mod
            ~\.cache\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: 下载依赖
        run: go mod tidy

      # 构建CLI版本（无CGO依赖）
      - name: 构建CLI版本
        run: |
          go build -o hastecli.exe ./cmd/hastecli
          if (!(Test-Path .\hastecli.exe)) { exit 1 }
        shell: pwsh

      # 构建GUI版本（有CGO依赖）
      - name: 构建GUI版本
        run: |
          $env:CGO_ENABLED = "1"
          go build -ldflags="-H windowsgui" -o hastegui.exe ./cmd/hastegui
          if (Test-Path .\hastegui.exe) { 
            Write-Host "GUI版本构建成功！" 
          } else {
            Write-Host "警告：GUI版本构建失败，这是预期的，因为CGO依赖问题"
          }
        shell: pwsh

      - name: 列出构建产物
        run: Get-ChildItem -Path . -Filter *.exe | Format-Table -Property Name, LastWriteTime, Length
        shell: pwsh

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: goduplicate-windows-binaries
          path: |
            *.exe
          retention-days: 7

  # 可选：测试CLI功能
  test-cli:
    needs: build
    runs-on: windows-latest
    if: always()  # 即使构建失败也运行测试
    steps:
      - name: 下载构建产物
        uses: actions/download-artifact@v4
        with:
          name: goduplicate-windows-binaries
          path: .

      - name: 验证CLI版本可执行性
        run: |
          if (Test-Path .\hastecli.exe) {
            .\hastecli.exe --help || echo "CLI帮助命令执行成功"
            Write-Host "CLI版本验证通过！"
          } else {
            Write-Host "错误：CLI可执行文件不存在"
            exit 1
          }
        shell: pwsh
